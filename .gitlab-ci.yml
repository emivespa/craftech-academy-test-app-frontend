stages:
  - build
  - deploy
  - notify

dotenv:
  stage: .pre
  artifacts:
    reports:
      dotenv: .env
  script:
    - case "$CI_COMMIT_BRANCH" in
        ('master')
          NAMESPACE=prd
          TAG=stable
          ;;
        ('dev')
          NAMESPACE=dev
          TAG=latest
          ;;
        (*)
          exit 1
          ;;
      esac
    - touch .env
    - echo "DOTENV_NAMESPACE=${NAMESPACE}"  >> .env
    - echo "DOTENV_TAG=${TAG}"              >> .env
  
build:
  stage: build
  environment:
    name: $CI_COMMIT_BRANCH
  rules:
    - if: $CI_PIPELINE_SOURCE == 'push'
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 -w 0)\"}}}" > /kaniko/.docker/config.json # Cargo culted from docs.
    - /kaniko/executor
      --cache=true
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}"
      --destination "${CI_REGISTRY_IMAGE}:latest"
      ${CI_BUILD_TAG+--destination "${CI_REGISTRY_IMAGE}:${CI_BUILD_TAG}"}
      

deploy:
  stage: deploy
  environment:
    name: $CI_COMMIT_BRANCH
  rules:
    - if: $CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master'
      when: manual
    - if: $CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'dev'
  image: alpine/helm:3.10.1
  script:
    - helm upgrade --install -n $DOTENV_NAMESPACE test-app-frontend chart --set image.tag=$DOTENV_TAG

notify:
  stage: notify
  environment:
    name: $CI_COMMIT_BRANCH
  rules:
    - if: $CI_PIPELINE_SOURCE == 'push'
  image: curlimages/curl:7.86.0 
  script:
    - |
      curl -X POST -H 'Content-type: application/json' --data '{"text":"Hello, frontend!"}' https://hooks.slack.com/services/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
